// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShopManage.Contexts;

#nullable disable

namespace eShopManage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230607064628_Fix2")]
    partial class Fix2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eShopManage.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("eShopManage.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("eShopManage.Entities.ShopProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("FriendlyPoint")
                        .HasColumnType("float");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdShop")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProvider");

                    b.HasIndex("IdShop");

                    b.ToTable("ShopProvider");
                });

            modelBuilder.Entity("eShopManage.Entities.ShopProvider", b =>
                {
                    b.HasOne("eShopManage.Entities.Provider", "Provider")
                        .WithMany("ShopProviders")
                        .HasForeignKey("IdProvider")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eShopManage.Entities.Shop", "Shop")
                        .WithMany("ShopProviders")
                        .HasForeignKey("IdShop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("eShopManage.Entities.Provider", b =>
                {
                    b.Navigation("ShopProviders");
                });

            modelBuilder.Entity("eShopManage.Entities.Shop", b =>
                {
                    b.Navigation("ShopProviders");
                });
#pragma warning restore 612, 618
        }
    }
}
